#!/bin/sh

id='$Id$'

bugger() {
   echo "*** configure error: $2"
   exit $1
}

getvalue() {
  echo $2 | sed -e "s/^--${1}=//"
}

# directories with Makefile.in that should be copied into the build directories.
makes='.'

# Get the absolute path to the distribution
dist_top=`dirname "$0"`
dist_top=`(cd $dist_top; pwd)`

arguments="$*"

# Collect options
prefix=''
host=''
target=''
qmp=''
latex=''
noweb=''
cc=''
ar=''
copts=''
help=''

while [ $# -ne 0 ]; do
   case "$1" in
      --prefix=*) prefix=`getvalue prefix $1`
         ;;
      --host=*) host=`getvalue host $1`
         ;;
      --target=*) target=`getvalue target $1`
         ;;
      --with-qmp=*) qmp=`getvalue with-qmp $1`
         ;;
      --with-ar=*) ar=`getvalue with-ar $1`
         ;;
      --with-cc=*) cc=`getvalue with-cc $1`
         ;;
      --with-copts=*) copts=`getvalue with-copts $1`
         ;;
      --with-latex=*) latex=`getvalue with-latex $1`
         ;;
      --with-noweb=*) noweb=`getvalue with-noweb $1`
         ;;
      --help) help=yes
         ;;
      *) bugger 1 "Unrecoginized argument $1"
         ;;
   esac
   shift
done

# If asked for help, print it and exit
if [ "$help" = "yes" ]; then
   cat <<EOF
     Usage: configure [options]

     Options are
       --help                print this help and exit
       --prefix=/dir/name    installation directory
       --target=target-id    target machine to build MDWF for
       --host=host-id        host configuration identifier
       --with-qmp=path       where to find qmp-config
       --with-ar=archiver    (cross) archiver to use
       --with-cc=C-compiler  (cross) compiler to use
       --with-copts=flags    flags to pass to the C compiler
       --with-latex=path     where LaTeX is
       --with-noweb=path     where NOWEB is

EOF
   exit 1
fi

# Run host specific setup
[ ! -z "$host" ] \
 && [ -f $dist_top/config.host/$host ] \
 && . $dist_top/config.host/$host

# Run target specific setup. The target flag must be present
if [ -z "$target" -o ! -f $dist_top/config.target/$target ]; then
   bugger 1 "Unknown or missing --target ($target)"
else
   . $dist_top/config.target/$target
fi

# Target should have specified $routines
[ ! -z "$builds" ] || bugger 1 "No builds is specified by target"

# QMP path should be set by now and have qmp-config in it
if [ -z "$qmp" -o ! -x $qmp/qmp-config ]; then
   bugger 1 "QMP configuration can not be queried"
fi

# If cc not set, revert to CC, or gcc if nothing else
if [ -z "$cc" ]; then
    cc=${CC:-gcc}
fi
[ -x `which "$cc"` ] || bugger 1 "C (cross)compiler seems to be missing, cc=$cc"

# Same for ar
if [ -z "$ar" ]; then
    ar=${AR:-ar}
fi
[ -x `which "$ar"` ] || bugger 1 "Archiver seems to be missing, ar=$ar"

if [ ! -z "$latex" ]; then
   [ -x $latex/latex ] || bugger 1 "LaTeX is not found at $latex"
   latexx=$latex/latex
else
   [ -x `which latex` ] || bugger 1 "No LaTeX in the PATH"
   latexx=latex
fi

if [ ! -z "$noweb" ]; then
   [ -x $noweb/noweave ] || bugger 1 "NOWEB is not found at $noweb"
   [ -x $noweb/notangle ] || bugger 1 "NOWEB is not found at $noweb"
   noweave=$noweb/noweave
   notangle=$noweb/notangle
else
   [ -x `which noweave` ] || bugger 1 "No NOWEB in the PATH"
   [ -x `which notangle` ] || bugger 1 "No NOWEB in the PATH"
   noweave=noweave
   notangle=notangle
fi

# generate the Makefiles

for d in $makes ; do
  mkdir -p $d
  cp $dist_top/$d/Makefile.in ./$d/Makefile
done

# Record the configuration
cat > Make.config <<EOF
# This file is automagicaly generated by configure. Do not edit
# Id: $id
DISTTOP=$dist_top
PREFIX=$prefix
HOST=$host
TARGET=$target
QMP_CONFIG=$qmp/qmp-config
XCC=$cc
XCOPTS=$copts
XAR=$ar
LATEX=$latexx
NOWEAVE=$noweave
NOTANGLE=$notangle
BUILDS=$builds
EOF

cat > config.log <<EOF
# Congiure ran as follows:
#
#  $dist_top/configure $arguments
#
# Id: $id
# Definitions are:
#
#  Target         "$target"
#  Host           "$host"
#  Prefix         "$prefix"
#  QMP            "$qmp"
#  cc             "$cc"
#  copts          "$copts"
#  ar             "$ar"
#  latex          "$latex"
#  noweb          "$noweb"
#  builds         "$builds"
#
EOF
cat config.log
