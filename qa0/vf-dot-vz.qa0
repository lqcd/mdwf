(verbose [(c99 bgl/xlc) "/* $Id$ */"])

(include "types.qa0")

;; G memory order:
;;   0th index: flavor index
;;   1st index: lattice index
;;   1nd index: vector of fermions
;;  vg[0][0][0]
;;  vg[1][0][0]
;;  ....
;;  vg[ls-1][0][0]
;;  vg[0][1][0]
;;  ....
;;  vg[ls-1][size-1][0]
;;  :::::::::
;;  vg[0][0][1]
;;  ...
;;
(procedure vf-dot-vz ([stem "vf_dot_vz"]
                       prec&color
                       count-flops)
           ([size      int     "size"      "int"                     ]
            [ls        int     "ls"        "int"                     ]
            [F         pointer "F"         "struct Fermion *"        ]
            [G         pointer "G"         "const struct vFermion *" ]
            [gv-stride int     "gv_stride" "int"                     ]
            [gv-begin  int     "gv_begin"  "int"                     ]
            [gv-len    int     "gv_len"    "int"                     ]
            [ptr-c     pointer "c"         "const double *"          ])
   (op int-mul () (g-offset) ([reg gv-begin] [reg gv-stride]))
   (op pointer-add () (G) ([reg G] [reg g-offset]))
   (loop () (i [const 0] [reg size])
     (loop () (s [const 0] [reg ls])
       (op qcd-zerof () (x) ())
       (op pointer-move () (G-c) ([reg G]))
       (op pointer-move () (z-c) ([reg ptr-c]))
       (loop () (c [const 0] [reg gv-len])
         (load qcd-fermion () v-G ([reg G-c]))
         (load double () r-r ([reg z-c]))
         (load double () r-i ([reg z-c] [const (size-of double)]))
         (op complex () (z) ([reg r-r] [reg r-i]))
         (op pointer-add () (G-c) ([reg G-c] [reg gv-stride]))
         (op pointer-add () (z-c) ([reg z-c] [const (* 2 (size-of double))]))
         (op qcd-cmaddf () (x) ([reg x] [reg z] [reg v-G])))
       (store qcd-fermion () ([reg F]) [reg x])
       (op pointer-add () (G) ([reg G] [const (size-of Fermion)]))
       (op pointer-add () (F) ([reg F] [const (size-of Fermion)])))))
