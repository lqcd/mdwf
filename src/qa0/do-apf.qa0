(verbose [c99 "/* QA0 source $Id$ */"])
(verbose [c99 "#include <complex.h>"])
(verbose [c99 "struct Fermion;"])
(verbose [c99 "struct ABTable;"])
(verbose [c99 "struct neighbor;"])
(verbose [c99 "struct SUn;"])

(include "types.qa0")

(procedure do-ApF ([stem "do_ApF"]
                   prec&color
                   count-flops)
       ([res-x     pointer   "res_x"    "struct Fermion *"         ]
        [size      int       "size"     "int"                      ]
        [l-s       int       "Ls"       "int"        		   ]
	[table     pointer   "table"    "const struct ABTable *"   ]
	[nb        pointer   "neighbor" "const struct neighbor *"  ]
	[U         pointer   "U"        "const struct SUn *"       ]
	[src-x     pointer   "src_x"    "const struct Fermion *"   ]
	[src-y     pointer   "src_y"    "const struct Fermion *"   ]
        [buf*      pointer   "rb"       "void **"                  ])
  (op int-mul () (s-line) ([reg l-s] [const (size-of Fermion)]))
  (loop () (i [const 0] [reg size])
    (op pointer-move () (t-s) ([reg table]))
    (op pointer-move () (r-s) ([reg res-x]))
    (op pointer-move () (x-s) ([reg src-x]))

    ;; compute A
    (loop () (s [const 0] [reg l-s])
      (load int () hi-index ([reg t-s] [const (offset-of AB-Table hi-index)]))
      (load int () lo-index ([reg t-s] [const (offset-of AB-Table lo-index)]))
      (load double () c-v ([reg t-s] [const (offset-of AB-Table c-value)]))
      (load double () l-v ([reg t-s] [const (offset-of AB-Table lo-value)]))
      (load double () h-v ([reg t-s] [const (offset-of AB-Table hi-value)]))
      (op pointer-add () (t-s) ([reg t-s] [const (size-of AB-Table)]))
      (op int-mul () (hi-off) ([reg hi-index] [const (size-of Fermion)]))
      (op int-mul () (lo-off) ([reg lo-index] [const (size-of Fermion)]))
      (op pointer-add () (hi-addr) ([reg x-s] [reg hi-off]))
      (op pointer-add () (lo-addr) ([reg x-s] [reg lo-off]))
      (load qcd-fermion () f-c ([reg x-s]))
      (load qcd-fermion-hi () f-h ([reg hi-addr]))
      (load qcd-fermion-lo () f-l ([reg lo-addr]))
      (op qcd-scalef () (g-c) ([reg c-v] [reg f-c]))
      (op qcd-madd-lohi () (g) ([reg g-c]
                                [reg l-v] [reg f-l]
				[reg h-v] [reg f-h]))
      (store qcd-fermion () ([reg r-s]) [reg g])
      (op pointer-add () (r-s) ([reg r-s] [const (size-of Fermion)]))
      (op pointer-add () (x-s) ([reg x-s] [const (size-of Fermion)])))

   ;;
   (load int () mask ([reg nb] [const (offset-of neighbor mask)]))

   ;; up neighbors
   (load int () U-idx ([reg nb] [const (offset-of neighbor up-u)]))
   (op pointer-add () (up-f) ([reg nb] [const (offset-of neighbor up-f)]))
   (op int-mul () (U-off) ([reg U-idx] [const (size-of SU-n)]))
   (op pointer-add () (U-addr) ([reg U] [reg U-off]))
   (macro ((d [const 0] [const *dim*]))
     (load int () f-idx ([reg up-f]))
     (op pointer-add () (up-f) ([reg up-f] [const (size-of int)]))
     (op int-mul () (f-off) ([reg f-idx] [reg s-line]))
     (op int-and () (remote?) ([reg mask] [const (shift 1 d)]))
     (op pointer-move () (r-s) ([reg res-x]))
     (load qcd-su-n () V ([reg U-addr]))
     (if-else [reg remote?]
       (begin
         ;; outside up neighbor: mul by V, unproject d minus (see op-dirac)
         (load pointer () f-ptr ([reg buf*] [const (* d (size-of pointer))]))
         (op pointer-add () (f) ([reg f-ptr] [reg f-off]))
         (loop () (s [const 0] [reg l-s])
           (load qcd-projected-fermion () h ([reg f]))
           (op qcd-mulh () (g) ([reg V] [reg h]))
           (load qcd-fermion () rr ([reg r-s]))
           (op qcd-unproject-add ([unproject d minus]) (rv) ([reg rr] [reg g]))
           (store qcd-fermion () ([reg r-s]) [reg rv])
	   (op pointer-add () (f) ([reg f] [const (size-of Projected-Fermion)]))
           (op pointer-add () (r-s) ([reg r-s] [const (size-of Fermion)]))))
       (begin
         ;; inside up neighbor: project d minus, mul by V, unproject
         (op pointer-add () (f) ([reg src-y] [reg f-off]))
         (loop () (s [const 0] [reg l-s])
           (load qcd-fermion () ff ([reg f]))
           (op qcd-project ([project d minus]) (h) ([reg ff]))
	   (op qcd-mulh () (g) ([reg V] [reg h]))
           (load qcd-fermion () rr ([reg r-s]))
           (op qcd-unproject-add ([unproject d minus]) (rv) ([reg rr] [reg g]))
           (store qcd-fermion () ([reg r-s]) [reg rv])
	   (op pointer-add () (f) ([reg f] [const (size-of Fermion)]))
           (op pointer-add () (r-s) ([reg r-s] [const (size-of Fermion)])))))
     (op pointer-add () (U-addr) ([reg U-addr] [const (size-of SU-n)])))

   ;; down neighbors
   (op pointer-add () (dn-f) ([reg nb] [const (offset-of neighbor down-f)]))
   (op pointer-add () (dn-u) ([reg nb] [const (offset-of neighbor down-u)]))
   (macro ((d [const 0] [const *dim*]))
     (load int () f-idx ([reg dn-f]))
     (load int () U-idx ([reg dn-u]))
     (op pointer-add () (dn-f) ([reg dn-f] [const (size-of int)]))
     (op pointer-add () (dn-u) ([reg dn-u] [const (size-of int)]))
     (op int-mul () (f-off) ([reg f-idx] [reg s-line]))
     (op int-and () (remote?) ([reg mask] [const (shift 1 (+ d *dim*))]))
     (op pointer-move () (r-s) ([reg res-x]))
     (if-else [reg remote?]
       (begin
         ;; outside down neighbor: unproject d plus
         (load pointer () f-ptr ([reg buf*] [const (* (+ *dim* d)
	                                              (size-of pointer))]))
         (op pointer-add () (f) ([reg f-ptr] [reg f-off]))
         (loop () (s [const 0] [reg l-s])
           (load qcd-projected-fermion () g ([reg f]))
           (load qcd-fermion () rr ([reg r-s]))
           (op qcd-unproject-add ([unproject d plus]) (rv) ([reg rr] [reg g]))
           (store qcd-fermion () ([reg r-s]) [reg rr])
           (op pointer-add () (f) ([reg f] [const (size-of Projected-Fermion)]))
	   (op pointer-add () (r-s) ([reg r-s] [const (size-of Fermion)]))))
       (begin
         ;; inside down neighbor: project d plus, mul-conj V, unproject
         (op int-mul () (U-off) ([reg U-idx] [const (size-of SU-n)]))
         (op pointer-add () (U-addr) ([reg U] [reg U-off]))
         (load qcd-su-n () V ([reg U-addr]))
         (op pointer-add () (f) ([reg src-y] [reg f-off]))
         (loop () (s [const 0] [reg l-s])
           (load qcd-fermion () ff ([reg f]))
           (op qcd-project ([project d plus]) (h) ([reg ff]))
           (op qcd-mulh () (g) ([reg V] [reg h]))
           (load qcd-fermion () rr ([reg r-s]))
           (op qcd-unproject-add ([unproject d plus]) (rv) ([reg rr] [reg g]))
           (store qcd-fermion () ([reg r-s]) [reg rv])
           (op pointer-add () (f) ([reg f] [const (size-of Fermion)]))
           (op pointer-add () (r-s) ([reg r-s] [const (size-of Fermion)]))))))
   (op pointer-add () (res-x) ([reg res-x] [reg s-line]))
   (op pointer-add () (src-x) ([reg src-x] [reg s-line]))
   (op pointer-add () (nb) ([reg nb] [const (size-of neighbor)]))))
